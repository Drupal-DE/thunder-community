<?php

/**
 * @file
 * Provide extended access control for forums.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Url;
use Drupal\taxonomy\TermInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function thunder_forum_access_form_forum_overview_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['terms'])) {
    /** @var \Drupal\thunder_forum_access\Access\ForumAccessManagerInterface $forum_access_manager */
    $forum_access_manager = \Drupal::service('thunder_forum_access.forum_access_manager');

    // Add 'Access' header column.
    $form['terms']['#header'][] = t('Access');

    // Ensure 'Operations' header column is last.
    $operations_header = NULL;
    foreach ($form['terms']['#header'] as $key => $header) {
      if ($header instanceof TranslatableMarkup && (string) $header === (string) t('Operations')) {
        $operations_header = $header;
        unset($form['terms']['#header'][$key]);
      }
    }

    if (isset($operations_header)) {
      $form['terms']['#header'][] = $operations_header;
    }

    foreach (Element::children($form['terms']) as $key) {
      if (isset($form['terms'][$key]['#term'])) {
        // Add 'configure access' operation link to all terms.
        $form['terms'][$key]['operations']['#links']['thunder_forum_access']['title'] = t('configure access');
        $form['terms'][$key]['operations']['#links']['thunder_forum_access']['url'] = Url::fromRoute('entity.taxonomy_term.thunder_forum_access', ['taxonomy_term' => $form['terms'][$key]['#term']->id()]);
        $form['terms'][$key]['operations']['#links']['thunder_forum_access']['query'] = \Drupal::destination()->getAsArray();

        // Load forum access record.
        $record = $forum_access_manager->getForumAccessRecord($form['terms'][$key]['#term']->id());

        // Add column containing forum access information.
        $form['terms'][$key]['access'] = [
          '#markup' => $record->inheritsMemberUserIds() && $record->inheritsModeratorUserIds() && $record->inheritsPermissions() ? t('Inherited') : t('Custom'),
        ];
      }

      // Ensure 'Operations' column is last.
      $operations = $form['terms'][$key]['operations'];
      unset($form['terms'][$key]['operations']);
      $form['terms'][$key]['operations'] = $operations;
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\node\NodeForm.
 */
function thunder_forum_access_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\thunder_forum_access\Access\ForumAccessManagerInterface $forum_access_manager */
  $forum_access_manager = \Drupal::service('thunder_forum_access.forum_access_manager');

  // Alter forum node form.
  $forum_access_manager->alterForumNodeForm($form, $form_state, $form_id);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function thunder_forum_access_form_taxonomy_term_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Is forum taxonomy term form?
  if (in_array($form_id, ['taxonomy_term_forums_forum_form', 'taxonomy_term_forums_container_form'])) {
    // 'Parent' field exists?
    if (isset($form['parent'][0])) {
      // Add element validation handler to disallow creation of nodes in forums
      // where users are not allowed to post into.
      $form['parent'][0]['#element_validate'][] = '_thunder_forum_access_element_validate_forum_parent';
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert() for taxonomy_term entities.
 */
function thunder_forum_access_taxonomy_term_insert(TermInterface $entity) {
  /** @var \Drupal\thunder_forum_access\Access\ForumAccessRecordStorageInterface $forum_access_storage */
  $forum_access_storage = \Drupal::service('thunder_forum_access.forum_access_record_storage');

  // Insert forum access record.
  $forum_access_storage->termInsert($entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete() for taxonomy_term entities.
 */
function thunder_forum_access_taxonomy_term_delete(TermInterface $entity) {
  /** @var \Drupal\thunder_forum_access\Access\ForumAccessRecordStorageInterface $forum_access_storage */
  $forum_access_storage = \Drupal::service('thunder_forum_access.forum_access_record_storage');

  // Delete forum access record.
  $forum_access_storage->termDelete($entity);
}

/**
 * Implements hook_ENTITY_TYPE_presave() for taxonomy_term entities.
 */
function thunder_forum_access_taxonomy_term_presave(TermInterface $entity) {
  /** @var \Drupal\thunder_forum_access\Access\ForumAccessRecordStorageInterface $forum_access_storage */
  $forum_access_storage = \Drupal::service('thunder_forum_access.forum_access_record_storage');

  // Perform pre-save operations.
  $forum_access_storage->termPreSave($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update() for taxonomy_term entities.
 */
function thunder_forum_access_taxonomy_term_update(TermInterface $entity) {
  /** @var \Drupal\thunder_forum_access\Access\ForumAccessRecordStorageInterface $forum_access_storage */
  $forum_access_storage = \Drupal::service('thunder_forum_access.forum_access_record_storage');

  // Update forum access record.
  $forum_access_storage->termUpdate($entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete() for user entities.
 */
function thunder_forum_access_user_delete(AccountInterface $entity) {
  /** @var \Drupal\thunder_forum_access\Access\ForumAccessRecordStorageInterface $forum_access_storage */
  $forum_access_storage = \Drupal::service('thunder_forum_access.forum_access_record_storage');

  // Delete forum access records.
  $forum_access_storage->userDelete($entity);
}

/**
 * Implements hook_thunder_forum_access_records_change().
 */
function thunder_forum_access_thunder_forum_access_records_change(array $tids) {
  $tags = [];

  // Build list of cache tags for affected forum taxonomy terms.
  foreach ($tids as $tid) {
    $tags[] = 'taxonomy_term:' . $tid;
  }

  // Invalidate cache records for affected forum taxonomy terms.
  Cache::invalidateTags($tags);
}

/**
 * Form element validation handler for forum taxonomy term's 'parent' element.
 *
 * Disallows creating nodes in forums where users are not allowed to post into.
 */
function _thunder_forum_access_element_validate_forum_parent(array $element, FormStateInterface $form_state) {
  // @todo Disallow creating nodes in forums where users are not allowed to.
}
